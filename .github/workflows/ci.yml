name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  FORCE_COLOR: 1

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-py${{ matrix.python-version }}-pip-${{ hashFiles('**/pyproject.toml', '**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-py${{ matrix.python-version }}-pip-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install -e ".[dev]"

    - name: Lint with Ruff
      run: |
        ruff check slm tests --output-format=github

    - name: Check formatting with Ruff
      run: |
        ruff format --check slm tests

    - name: Type check with mypy
      run: |
        mypy slm --no-error-summary

    - name: Test with pytest
      run: |
        pytest tests/ --cov=slm --cov-report=xml --cov-report=term-missing --tb=short

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.10'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-py3.10-security-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-py3.10-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install safety ruff
        pip install -e .

    - name: Security linting with Ruff
      run: |
        ruff check slm/ --select=S --output-format=github --exit-zero

    - name: Dependency security check with safety
      run: |
        safety check --json --output safety-report.json || true
        safety check

  code-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-py3.10-quality-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-py3.10-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install -e ".[dev]"

    - name: Comprehensive linting
      run: |
        ruff check slm tests --statistics --show-fixes

    - name: Check for performance anti-patterns
      run: |
        ruff check slm/ --select=PERF --output-format=github --exit-zero

    - name: Run performance tests (if any)
      run: |
        python -m pytest tests/ -k "performance" -v --tb=short || echo "No performance tests found"
